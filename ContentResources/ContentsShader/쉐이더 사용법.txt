Shader 사용법

ContentFBXRenderer 에 쉐이더 기능을 다 내장할 계획

*********************************************************************************************************************
포인트 라이트 추가
*********************************************************************************************************************
Level에서 AddPointLight 함수 호출하면 됨.

GetLevel()->AddPointLight({.,Color = {1.0f, 1.0f, 1.0f},.Position = {0.0f, 0.0f, 0.0f},.MaxDist = 10.0f,.Intensity = 5.0f);
한 번 생성하면 제거는 안됨.
MaxDist는 빛의 최대 도달 거리
Intensity는 빛의 강도
---------------------------------------------------------------------------------------------------------------------


*********************************************************************************************************************
FadeIN & Out 
*********************************************************************************************************************

ContentFBXRenderer로 생성한 후에 머티리얼 세팅

ContentAniMeshForward
ContentAniMeshDeffered
ContentMeshForward
ContentMeshDeffered

머티리얼은 이거중 아무거나 하면 됨.
Mask텍스쳐는 기본으로 설정이 되어 있는데, 바꾸고 싶으면 SetFadeMask호출하면 됩니다.

이후, Fade 효과를 넣고싶은 시점에
FadeOut or FadeIn 을 업데이트 돌리면 됩니다.
인자는 1.Fade가 끝날 때까지 걸리는 시간 2.델타타임 입니다.
---------------------------------------------------------------------------------------------------------------------


*********************************************************************************************************************
Crack
*********************************************************************************************************************

ContentFBXRenderer로 생성한 후에 머티리얼 세팅

ContentAniMeshForward
ContentAniMeshDeffered
ContentMeshForward
ContentMeshDeffered

머티리얼은 이거중 아무거나 하면 됨.

이후, SetCrackAmount를 호출해서, 인자에 0~1사이의 원하는 값을 넣어주면
Crack의 양이 조절됨.

포스트 프로세스로 효과를 넣기 떄문에, 레벨에서 이펙트를 생성해줘야 합니다.
GetMainCamera()->GetDeferredLightTarget() 에다가 효과를 넣어줘야 합니다!!
카메라에 타겟 종류가 많은데, 디퍼드라이트타겟에 효과를 넣어야 해요

std::shared_ptr<GlowEffect> NewEffect = GetMainCamera()->GetDeferredLightTarget()->CreateEffect<GlowEffect>();

레벨의 포인터가 필요해서 아래 함수를 반드시 호출해줘야 합니다.
NewEffect->Init(DynamicThis<GameEngineLevel>(), 3.5f);

두번째 인자인 float는 밝기의 강도인데, 3~5정도가 적당한 것 같던데 수치 바꿔가면서 원하는 대로 조절하시면 됨.
(이거 적용하려면, Renderer의 SetCrackAmount를 호출해서 0.0f을 초과하는 값으로 반드시 넣어줘야 합니다.)
---------------------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------------------
기타 기능

1. SetAllUnitTexture
렌더 유닛들의 텍스쳐 한 번에 바꾸고 싶을 때 이거 호출하면 됨.

--------------------------









렌더타겟 타입
0. Forward
1. Deffered_DiffuseColor
2. Position
3. Color

(4, 5) - Empty(?)

6. Alpha
7. Blur