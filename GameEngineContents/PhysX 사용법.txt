 - PhysX 사용법 - 

PhysX를 사용할 "레벨"은 PhysXLevel이란것을 GameEngineLevel 대신 상속 받아서 사용합니다.
해당 레벨은 Start 혹은 LevelChangeStart() 에서 CreateScene을 하여야 해당 레벨에서 PhysX를 사용할 수 있습니다.


PhysX를 사용할 "액터"는 원하는 모양의 컴포넌트를 CreateComponent()를 통해 장착합니다. (PhysXTestActor에 견본 有)
CreateComponent의 인자는 크기, 회전값, 스태틱여부 총 3가지를 넣을수 있습니다.


만든 액터를 충돌 체크를 하고 싶을때는 SetFilterData() 를 사용합니다. (PhysXTrigger에 견본 有)
인자의 들어가는 enum은 ContentsEnum.h 의 PhysXFilterGroup에 추가하여 사용 가능합니다.
인자는 처음은 본인의 유형을 설정합니다.
(본인을 여러개의 필터로 설정도 가능한데 전부 쓰고싶은거면 말좀해주셈 추가해야함)

원하는것을 세팅했다면 GlobalValue에 가서 Pair를 통해 서로 연결되어있는지 확인해야합니다. 서순은 상관x
없으면 추가 ㄱㄱ


충돌체크는 PhysXCustom.cpp에서 합니다. (PhysXCustom에 견본 有)

충돌했으면 Actor포인터에 IsPhysXCollision을 해당 비트값으로 바꿔주기에
액터는 CheckCollision(상대 필터) 를 통하여 충돌했는지 bool값으로 알수 있습니다.
FSM Base쓰는 액터는 거기에 IsPhysXCollision를 0으로 바꿔주는게 있는데 그거 안쓰는 액터는 업데이트 종료시 직접 0을 해줘야합니다.


추가적으로 엔진 Update는 안정적인 충돌연산을 위해 120프레임으로 제한을 뒀습니다. (PhysX Simulate가 Update 더 많이 돌아야 안정적)